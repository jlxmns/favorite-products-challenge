services:
  db:
    image: postgres:16-alpine
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME:?}
      - POSTGRES_USER=${DB_USER:?}
      - POSTGRES_PASSWORD=${DB_PASSWORD:?}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    container_name: web
    command: sh -c "python manage.py migrate && python manage.py create_admin && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    environment:
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@aiqfome.com
      - DJANGO_SUPERUSER_PASSWORD=admin
    volumes:
      - .:/code
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  product-sync:
    build: .
    env_file:
      - .env
    command: sh -c "sleep 30 && while true; do python manage.py sync_products; sleep 3600; done"
    volumes:
      - .:/code
    depends_on:
      - web
      - db

volumes:
  postgres_data:
